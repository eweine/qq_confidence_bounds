% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qqplot.R
\name{qq_conf_plot}
\alias{qq_conf_plot}
\title{QQ Plot with Simultaneous and Pointwise Testing Bounds.}
\usage{
qq_conf_plot(obs, distribution = qnorm, method = c("ell", "ks"),
  alpha = 0.05, difference = FALSE, log10 = FALSE, add = FALSE,
  dparams = list(), bounds_params = list(), line_params = list(),
  plot_pointwise = FALSE, pointwise_params = list(),
  samples_plot_type = c("points", "line"), samples_params = list(),
  polygon_params = list(border = NA, col = "gray"), ...)
}
\arguments{
\item{obs}{The observed data.}

\item{distribution}{The quantile function for the specified distribution. Defaults to qnorm.
Custom distributions are allowed so long as all parameters are supplied in dparams.}

\item{method}{Method for simultaneous testing bands. Must be either "ell" (equal local levels test), which applies a level \eqn{\eta} pointwise
test to each order statistic such that the Type I error of the global test is \eqn{\alpha}, or "ks" to apply a 
Kolmogorov-Smirnov test. For \eqn{\alpha} = .01, .05, and .1, "ell" is recommended.}

\item{alpha}{Type I error of global test of if the data comes from the reference distribution.}

\item{difference}{Whether to plot the difference between the observed and
expected values on the vertical axis.}

\item{log10}{Whether to plot axes on -log10 scale (e.g. to see small p-values). Can only be used for strictly
positive distributions.}

\item{add}{Whether to add points to an existing plot.}

\item{dparams}{List of additional parameters for the quantile function of the distribution
(e.g. df=1). For the uniform distribution, the default parameters are max = 1 and min = 0.
For other distributions parameters will be estimated if not provided and an appropriate estimation procedure exists.
For the normal distribution, we estimate the mean as the median and the standard deviation as \eqn{Sn} from the paper by Rousseeuw and Croux 1993
"Alternatives to the Median Absolute Deviation". For all other distributions besides uniform and normal,
the code uses MLE to estimate the parameters. Note that estimation is not implemented for custom distributions, so all
parameters of the distribution must be provided by the user.}

\item{bounds_params}{List of optional parameters for get_bounds_two_sided
(i.e. tol, max_it, method).}

\item{line_params}{Parameters passed to the abline function to modify the line that indicates a perfect fit of the
reference distribution.}

\item{plot_pointwise}{Boolean indiciating if pointwise bounds should be added to the plot}

\item{pointwise_params}{Parameters passed to the lines function that modifies pointwise bounds if plot_pointwise is
set to TRUE.}

\item{polygon_params}{Parmeters to be passed to the polygon function to construct simultaenous confidence bounds.
By default the border is set to NA and the shade color is grey.}

\item{...}{Additional parameters for the plot.}

\item{samples_func}{Function used to plot sample points on the graph.}

\item{sample_params}{Parameters to be passed to the samples function to plot quantiles.}
}
\description{
Create a qq-plot with with a shaded simultaneous acceptance region and,
optionally, lines for a point-wise region. The observed values are plotted
against their expected values had they come from the specified distribution.
}
\details{
If any of the points of the qq-plot fall outside the simultaneous acceptance region for the selected
level alpha test, that means that we can reject the null hypothesis that the data are i.i.d. draws from the
specified distribution. If 'difference' is set to TRUE, the vertical axis plots the 
observed quantile minus expected quantile. Set pw.lty to a non-zero line type to plot
the pointwise bounds. If pointwise bands are used, then on average, alpha * n of the points will fall outside
the bounds under the null hypothesis, so the chance that the qq-plot has any points falling outside of the pointwise bounds
is typically much higher than alpha under the null hypothesis. For this reason, a simultaneous region is preferred.
}
\examples{
set.seed(0)
smp <- runif(100)

# Plot QQ plot against uniform(0, 1) distribution
qq_conf_plot(
  obs=smp, 
  distribution = qunif
)

# Make same plot on log10 scale to highlight small p-values
qq_conf_plot(
  obs=smp, 
  distribution = qunif,
  log10 = TRUE
)

# Make same plot with difference between observed and expected values on the y-axis 
qq_conf_plot(
  obs=smp, 
  distribution = qunif,
  difference = TRUE
)

# Make same plot with samples plotted as a blue line and mean line plotted as a red line
qq_conf_plot(
  obs=smp, 
  distribution = qunif,
  plot_pointwise = TRUE,
  method = "ell",
  samples_plot_type = "line",
  samples_params = list(col="blue"),
  line_params = list(col="red")
)

}
