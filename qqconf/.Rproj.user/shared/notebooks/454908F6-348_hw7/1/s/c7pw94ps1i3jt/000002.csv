"0","estimate_BH_Pfdr <- function(alpha, pi_zero, sigma_b, num_sims = 100) {"
"0","  "
"0","  exp_fdr <- 0"
"0","  sim <- 1"
"0","  "
"0","  while(sim <= num_sims){"
"0","    "
"0","    # this should just be simple calls to the functions above"
"0","    data <- simulate_data(pi_zero = pi_zero, mixt_sd = sigma_b)"
"0","    p_vals <- comp_p_val(data$D)"
"0","    test_results <- apply_BH(alpha, p_vals)"
"0","    if(any(test_results != 0)) {"
"0","      "
"0","      exp_fdr <- exp_fdr + (1 / num_sims) * e_fdr(data$beta, test_results)"
"0","      sim <- sim + 1"
"0","      "
"0","    }"
"0","    "
"0","  }"
"0","  "
"0","  return(exp_fdr)"
"0","  "
"0","}"
"0","plot_test_sims_P <- function(pi_zero, sigma_b = 3) {"
"0","  "
"0","  fdr_vec <- c()"
"0","  alpha_seq <- seq(from = .05, to = .5, by = .05)"
"0","  for(alpha in alpha_seq) {"
"0","    "
"0","    fdr_vec <- c(fdr_vec, estimate_BH_Pfdr(alpha, pi_zero, sigma_b))"
"0","    "
"0","  }"
"0","  "
"0","  if(pi_zero == 1) {"
"0","    "
"0","    plt_str <- ""Simulation Results for pi_zero = 1"""
"0","    "
"0","  }"
"0","  "
"0","  else {"
"0","    "
"0","    plt_str <- glue::glue(""Simulation Results for pi_zero = {pi_zero} and sigma_b = {sigma_b}"")"
"0","    "
"0","  }"
"0","  "
"0","  plot(x = alpha_seq, y = fdr_vec, xlab = ""alpha"", ylab = ""E[V/R | R > 0]"", main = plt_str)"
"0","  "
"0","}"
